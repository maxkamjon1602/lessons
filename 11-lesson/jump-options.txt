Option A — Medium jump (safe)

Apex ≈ 2.8u, airtime ≈ 1.11s, range ≈ 6.7u with vx≈6

// constants (near the top of Step 2)
const MOVE_SPEED=6.0, AIR_SPEED=6.0;   // was 5.0
const GRAVITY=-18.0;
const JUMP_SPEED=10.0;                 // was 8.5
const JUMP_CUT_MULT=2.4;
const SNAP_LOCK_AFTER_JUMP=0.08;       // was 0.06


Option B — Heroic jump (long gaps)

Apex ≈ 3.7u, airtime ≈ 1.28s, range ≈ 8.3u with vx≈6.5

const MOVE_SPEED=6.5, AIR_SPEED=6.5;
const GRAVITY=-18.0;
const JUMP_SPEED=11.5;
const JUMP_CUT_MULT=2.4;
const SNAP_LOCK_AFTER_JUMP=0.10;


Option C — Keep height, boost distance

const AIR_SPEED=7.0;      // only increase air control
const SNAP_LOCK_AFTER_JUMP=0.08;


Adding carry-over speed at takeoff (feels snappier)

Making sure jump preserves the ground speed on the first airborne frame. Right after we consume the jump buffer (the block that sets vy = JUMP_SPEED;), adding one line:

if (jumpBufferTimer>0 && (grounded || coyoteTimer>0)) {
  vy = JUMP_SPEED;
  // NEW: carry horizontal speed on takeoff
  const ix = (input.right?1:0) - (input.left?1:0);
  vx = ix * MOVE_SPEED;

  grounded = false;
  coyoteTimer = 0;
  jumpBufferTimer = 0;
  snapLock = SNAP_LOCK_AFTER_JUMP;
}